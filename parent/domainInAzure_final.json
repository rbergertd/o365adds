{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.6.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The Windows administrative user name."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The Windows administrative password."
            }
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2016-Datacenter",
            "allowedValues": [
                "2012-R2-Datacenter",
                "2016-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for both virtual machines. This will pick a fully patched image of this given Windows version."
            }
        },
        "dcVirtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "allowedValues": [
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2"
            ],
            "metadata": {
                "description": "The size of the Domain Controller virtual machine. For most use cases, DS2v2 (2vCPU/7GB vRAM) will be sufficient. If you plan on running other services on top of your domain controller, consider DS3v2 (4vCPU/14GB vRAM) or DS4v2 (8vCPU/28GB vRAM)."
            }
        },
        "addtlDataDiskSize": {
            "type": "string",
            "defaultValue": "32",
            "allowedValues": [
                "32",
                "64",
                "128",
                "256",
                "512",
                "1024",
                "2048"
            ],
            "metadata": {
                "description": "An additional data disk is added to the domain controller for you to store and share data on. Please pick the size you would allocated to this disk."
            }
        },
        "fqDomainName": {
            "type": "string",
            "metadata": {
                "description": "The Domain name for the newly created ADDS domain. In order to use the AD Connect synchronization, this must be a routable domain that is verified in Office 365/Azure Active Directory. It must be a valid Internet domain name (for example, .com, .org, .net, .us, etc.)."
            }
        }
    },
    "variables": {
        "dcServername": "azuredc",
        "adcServerName": "azureadc",
        "domainJoinOptions": "3",
        "publicIPAddressName": "[tolower(concat('adpip',uniqueString(resourceGroup().Id)))]",
        "adVnetName": "[concat('ADVNET',resourceGroup().name)]",
        "adSubnetName": "[concat('ADStaticSubnet',resourceGroup().name)]",
        "updateVNetDNS1": "updateVNetDNS",
        "vnetAddressRange": "10.0.0.0/24",
        "subnetAddressRange": "10.0.0.0/26",
        "dnsServerPrivateIp": "10.0.0.4",
        "subnet-id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('adVnetName')),'/subnets/', variables('adSubnetName'))]",
        "vaultName": "AzureBackupVault",
        "backupFabric": "Azure",
        "backupPolicyName": "DefaultPolicy",
        "protectionContainer": "[concat('iaasvmcontainer;iaasvmcontainerv2;', resourceGroup().name, ';', variables('dcServername'))]",
        "protectionContainer2": "[concat('iaasvmcontainer;iaasvmcontainerv2;', resourceGroup().name, ';', variables('adcServername'))]",
        "protectedItem": "[concat('vm;iaasvmcontainerv2;', resourceGroup().name, ';', variables('dcServername'))]",
        "protectedItem2": "[concat('vm;iaasvmcontainerv2;', resourceGroup().name, ';', variables('adcServername'))]",
        "storageAccountName": "[concat('diagsa', uniquestring(resourceGroup().id))]",
        "storageAccountType": "Standard_LRS",
        "dcDataDisk": "32",
        "extensionName": "Microsoft.Insights.VMDiagnosticsSettings",
        "dscExtensionName": "InstallDomainController",
        "adcPSScript": "getADC",
        "accountid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
        "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
        "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
        "wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
        "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name , '/providers/', 'Microsoft.Compute/virtualMachines/')]",
        "wadcfgxend": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>",
        "nestedUri": "https://raw.githubusercontent.com/rbergertd/o365adds/master/nested/",
        "nestedVnetDeploy": "vnet-with-dns-server.json",
        "baseUri": "https://github.com/rbergertd/o365adds/raw/master/",
        "dscZipFile": "builddc.zip",
        "dscConfiguration": "dsc_createdomain.ps1\\CreateADPDC",
        "subnets": [
            {
                "name": "[variables('adSubnetName')]",
                "properties": {
                    "addressPrefix": "[variables('subnetAddressRange')]"
                }
            }
        ]
    },
    "resources": [
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dcServerName'),uniqueString(resourceGroup().Id))]"
                }
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('adVnetName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressRange')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('adSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressRange')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('dcServerName'),'-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('publicIPAddressName')]",
                "[variables('adVnetName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('dcServerName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('dcServerName'),'-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('dcVirtualMachineSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('dcServerName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('dcServerName'),'-osDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('dcServerName'),'-dcDataDrive')]",
                            "diskSizeGB": "[variables('dcDataDisk')]",
                            "lun": 0,
                            "createOption": "Empty",
                            "caching": "None"
                        },
                        {
                            "name": "[concat(variables('dcServerName'),'-addtlDataDrive')]",
                            "diskSizeGB": "[parameters('addtlDataDiskSize')]",
                            "lun": 1,
                            "createOption": "Empty",
                            "caching": "None"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('dcServerName'),'-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "name": "[variables('extensionName')]",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2018-06-01",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('dcServerName'))]"
                    ],
                    "tags": {
                        "displayName": "AzureDiagnostics"
                    },
                    "properties": {
                        "publisher": "Microsoft.Azure.Diagnostics",
                        "type": "IaaSDiagnostics",
                        "typeHandlerVersion": "1.5",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), variables('dcServerName'), variables('wadcfgxend')))]",
                            "storageAccount": "[variables('storageAccountName')]"
                        },
                        "protectedSettings": {
                            "storageAccountName": "[variables('storageAccountName')]",
                            "storageAccountKey": "[listkeys(variables('accountid'), '2015-06-15').key1]",
                            "storageAccountEndPoint": "https://core.windows.net"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2016-06-01",
            "type": "Microsoft.RecoveryServices/vaults",
            "location": "[resourceGroup().location]",
            "name": "[variables('vaultName')]",
            "sku": {
                "name": "RS0",
                "tier": "Standard"
            },
            "properties": {}
        },
        {
            "apiVersion": "2016-12-01",
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
            "name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', variables('protectionContainer'), '/', variables('protectedItem'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('dcServerName'))]",
                "[resourceId('Microsoft.RecoveryServices/vaults/', variables('vaultName'))]"
            ],
            "properties": {
                "protectedItemType": "Microsoft.Compute/virtualMachines",
                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'), variables('backupPolicyName'))]",
                "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines/', variables('dcServerName'))]"
            }
        },
        {
            "name": "[concat(variables('dcServerName'),'/InstallDomainController')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('dcServerName'))]",
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('dcServerName'), variables('extensionName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.19",
                "autoUpgradeMinorVersion": "true",
                "settings": {
                    "modulesUrl": "[concat(variables('baseUri'), '/', variables('dscZipFile'))]",
                    "configurationFunction": "[variables('dscConfiguration')]",
                    "properties": {
                        "domainName": "[parameters('fqDomainName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "PrivateSettingsRef:adminPassword"
                        }
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "name": "[variables('updateVNetDNS1')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('dcServerName'), variables('dscExtensionName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('nestedUri'), variables('nestedVnetDeploy'))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[variables('adVnetName')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[variables('vnetAddressRange')]"
                    },
                    "subnets": {
                        "value": "[variables('subnets')]"
                    },
                    "dnsServerAddress": {
                        "value": [
                            "[variables('dnsServerPrivateIp')]"
                        ]
                    }
                }
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('adcServerName'),'-nic')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('adVnetName')]",
                "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('dcServerName'),'-nic'))]",
                "[concat('Microsoft.Compute/virtualMachines/', variables('dcServerName'))]",
                "[concat('Microsoft.Resources/deployments/', variables('updateVNetDNS1'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('adcServerName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('adcServerName'),'-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B2s"
                },
                "osProfile": {
                    "computerName": "[variables('adcServerName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('adcServerName'),'-osDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('adcServerName'),'-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "apiVersion": "2015-06-15",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('adcServerName'),'/joindomain')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('dcServerName'), variables('dscExtensionName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/', variables('adcServerName'))]",
                        "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('adcServerName'), variables('adcPSScript'))]",
                        "[variables('updateVNetDNS1')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "JsonADDomainExtension",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "Name": "[parameters('fqDomainName')]",
                            "OUPath": "",
                            "User": "[concat(parameters('fqDomainName'), '\\', parameters('adminUsername'))]",
                            "Restart": "true",
                            "Options": "[variables('domainJoinOptions')]"
                        },
                        "protectedSettings": {
                            "Password": "[parameters('adminPassword')]"
                        }
                    }
                },
                {
                    "apiVersion": "2018-06-01",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('adcServerName'),'/getADC')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                      "[concat('Microsoft.Compute/virtualMachines/', variables('adcServerName'))]",
                      "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('dcServerName'), variables('dscExtensionName'))]",
                      "[variables('updateVNetDNS1')]"
                    ],
                    "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "CustomScriptExtension",
                      "typeHandlerVersion": "1.9",
                      "settings": {
                        "fileUris": [
                            "[concat(variables('baseUri'), 'getADC.ps1')]"
                        ],
                        "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file getADC.ps1')]"
                      }
                    }
                }
            ]
        },
        {
            "apiVersion": "2016-12-01",
            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
            "name": "[concat(variables('vaultName'), '/', variables('backupFabric'), '/', variables('protectionContainer2'), '/', variables('protectedItem2'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('adcServerName'))]",
                "[resourceId('Microsoft.RecoveryServices/vaults/', variables('vaultName'))]"
            ],
            "properties": {
                "protectedItemType": "Microsoft.Compute/virtualMachines",
                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', variables('vaultName'), variables('backupPolicyName'))]",
                "sourceResourceId": "[resourceId('Microsoft.Compute/virtualMachines/', variables('adcServerName'))]"
            }
        }
    ]
}